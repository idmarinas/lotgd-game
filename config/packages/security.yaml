security:
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # Custom firewall for the admin area
        admin:
            pattern: ^/_grotto
            provider: lotgd_admin_user_provider
            user_checker: Lotgd\Bundle\AdminBundle\Security\UserChecker
            form_login:
                login_path: lotgd_admin_login
                use_forward: false
                check_path: lotgd_admin_login
                failure_path: null
            logout:
                path: lotgd_admin_logout
                target: lotgd_admin_login
            anonymous: lazy
            guard:
                authenticators:
                    - Lotgd\Bundle\AdminBundle\Security\LoginFormAuthenticator
            # entry_point: form_login
        # Main (default) firewall (Activated when none of the above is active.)
        main:
            anonymous: lazy
            provider: lotgd_core_user_provider
            user_checker: Lotgd\Bundle\UserBundle\Security\UserChecker
            guard:
                authenticators:
                    - Lotgd\Bundle\UserBundle\Security\LoginFormAuthenticator
            logout:
                path: lotgd_core_logout
                # where to redirect after logout
                # target: app_any_route

            # https://symfony.com/doc/current/security/remember_me.html
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path: /
                secure: true
                httponly: true
                samesite: strict

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # All routes prefixed with /_grotto/ is the admin panel.
        # and need ROLE_ADMIN to access
        - { path: ^/_grotto/, roles: ROLE_ADMIN }

        # All routes prefixed with /game/ are public access.
        # this routes is for information of public info game
        - { path: ^/game/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # All routes prefixed with /play/ are ahtenticated access.
        # Only users authenticated can access this routes.
        # This is the game itself (village, forest, profile...)
        - { path: ^/play/, roles: IS_AUTHENTICATED_FULLY }

        # All others routers can be public or authenticated access as your want
        # By default is public access
        # If you want them to be authenticated access.
        # Change IS_AUTHENTICATED_ANONYMOUSLY for IS_AUTHENTICATED_FULLY in the next line
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
