{% translate_default_domain textDomain %}

<form id="mail-message" method="POST" class="ui form">
    <input type="hidden" name="return_to" value="{{ msgId }}">
    <div class="inline field">
        <label for="to">{{ 'section.write.form.to'|t|colorize }}</label>
        {% if row.acctid %}
            <input type="hidden" name="to" id="to" value="{{ row.acctid }}">
            <div class="input">{{ row.name|colorize }}</div>
        {% else %}
            <select class="ui fluid search selection dropdown" name="to" id="search"></select>
        {% endif %}
    </div>
    <div class="field">
        <label for="subject">{{ 'section.write.form.subject'|t|colorize }}</label>
        <input type="text" name="subject" id="subject" value="{{ row.subject|stripslashes|e('html')|trim }}">
    </div>
    <div class="ui warning message" id="warning" style="visibility: hidden; display: none;">
        {{ 'section.write.mail.notice'|t|uncolorize }}
    </div>
    <div class="field">
        <label for="body">{{ 'section.write.form.body'|t|colorize }}</label>
        <span id="sizemsg"></span>
        <textarea name="body" id="body" onkeyup="sizeCount(this)">{{ row.body|stripslashes|replace({ '`n': '\n' })|e('html')|trim }}</textarea>
    </div>
</form>

<script type='text/javascript'>
    /* global $ Lotgd */
    $('#search').dropdown({
        preserveHTML: false,
        apiSettings: {
            cache: false,
            url: 'ajaxmailsearch.php?search={query}',
            onResponse: function (response)
            {
                if (response.success)
                {
                    Lotgd.set('mail-search-response', response.results)
                }

                // make some adjustments to response
                return response
            }
        }
    })
    $('#search').on('change', function ()
    {
        const val = $(this).val()
        const superuser = Lotgd.get('mail-search-response')
        const user = superuser.find(function (user)
        {
            if (user.value === val)
            {
                return user
            }
        })

        checkSuWarning(user)
    })

    var charactersLeft = '{{ "section.write.form.characters.left"|t|colorize|e("js") }}'
    var charactersOver = '{{ "section.write.form.characters.over"|t|colorize|e("js") }}'

    var maxlen = '{{ mailSizeLimit }}'

    function sizeCount (box)
    {
        if (box == null)
        {
            return
        }

        var len = box.value.length
        var msg = ''
        msg = charactersOver.replace('{size}', maxlen).replace('{over}', (len - maxlen))

        $('button[type="submit"]').attr('disabled', true)

        if (len <= maxlen)
        {
            msg = charactersLeft.replace('{size}', maxlen).replace('{left}', (maxlen - len))
            $('button[type="submit"]').attr('disabled', false)
        }

        document.getElementById('sizemsg').innerHTML = msg
    }
    sizeCount(document.getElementById('body'))

    function checkSuWarning (user)
    {
        const warning = document.getElementById('warning')

        if (user.superuser === true)
        {
            warning.style.visibility = 'visible'
            warning.style.display = 'block'
        }
        else
        {
            warning.style.visibility = 'hidden'
            warning.style.display = 'none'
        }
    }
</script>
