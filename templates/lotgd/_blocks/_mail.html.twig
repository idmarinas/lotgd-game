{% translate_default_domain 'jaxon-mail' %}

{% block mail_inbox %}
    {{ block('mail_buttons') }}

    <br>

    {{ 'section.default.subtitle'|t|colorize }}
    <br>
    {% for msg in message %}
        <br>{{ msg[0]|t(msg[1])|colorize }}
    {% endfor %}
    <br>
    {% if mails|length %}
        {% set statusAltText = {
            'online': 'section.default.table.tbody.status.online'|t|uncolorize,
            'offline': 'section.default.table.tbody.status.offline'|t|uncolorize
        } %}
        {% set newMsg = 'section.default.table.tbody.msg.new'|t|uncolorize %}
        {% set oldMsg = 'section.default.table.tbody.msg.old'|t|uncolorize %}

        {% set arrow = sortDirection ? '<i class="sort descending icon"></i>' : '<i class="sort ascending icon"></i>' %}

        <form id="mail-inbox-form" method="POST">
            <table class="ui very compact unstackable table">
                <thead>
                    <tr>
                        <th scope="col"></th>
                        <th scope="col">
                            {% set directionSubject = ('subject' == sortOrder ? newDirection : sortDirection) %}
                            <a href="#" onclick="JaxonLotgd.Ajax.Core.Mail.inbox('subject', '{{ directionSubject }}'); $(this).addClass('disabled')">
                                {{ 'subject' == sortOrder ? arrow : '' }}
                                {{ 'section.default.table.thead.subject'|t|uncolorize }}
                            </a>
                        </th>
                        <th scope="col">
                            {% set directionName = ('name' == sortOrder ? newDirection : sortDirection) %}
                            <a href="#" onclick="JaxonLotgd.Ajax.Core.Mail.inbox('name', '{{ directionName }}'); $(this).addClass('disabled')">
                                    {{ 'name' == sortOrder ? arrow : '' }}
                                {{ 'section.default.table.thead.from'|t|uncolorize }}
                            </a>
                        </th>
                        <th scope="col">
                            {% set directionDate = ('date' == sortOrder ? newDirection : sortDirection) %}
                            <a href="#" onclick="JaxonLotgd.Ajax.Core.Mail.inbox('date', '{{ directionDate }}'); $(this).addClass('disabled')">
                                    {{ 'date' == sortOrder ? arrow : '' }}
                                {{ 'section.default.table.thead.date'|t|uncolorize }}
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    {% for mail in mails %}
                        <tr id="mail-row-{{ mail.messageid }}">
                            <td class="collapsing">
                                <div class="ui toggle lotgd checkbox">
                                    <input type="checkbox" data-sender="{{ mail.msgfrom }}" name="msg[]" value="{{ mail.messageid }}">
                                </div>
                                <button type="button" class="ui mini red icon delete button" onclick="JaxonLotgd.Ajax.Core.Mail.deleteMail('{{ mail.messageid }}', '{{ textDomain }}'); $(this).addClass('loading disabled');">
                                    <i class="trash icon"></i>
                                </button>
                            </td>
                            <td>
                                {% if 0 == mail.msgfrom %}
                                    {% set subject = mail.subject|stripslashes|unserialize %}
                                {% else %}
                                    {% set subject = mail.subject %}
                                {% endif %}

                                <a href="#" onclick="JaxonLotgd.Ajax.Core.Mail.read('{{ mail.messageid }}')">
                                    <img src="images/{{ mail.seen ? 'old' : 'new' }}scroll.GIF" width="16px" height="16px" alt="{{ mail.seen ? oldMsg : newMsg }}">
                                    {% if subject is array %}
                                        {{ subject[0]|tl(subject[1], subject[2])|colorize }}
                                    {% elseif not subject %}
                                        {{ mail.subject|default('section.default.table.tbody.no.subject'|t)|e('html')|colorize }}
                                    {% else %}
                                        {{ subject|e('html')|colorize }}
                                    {% endif %}
                                </a>
                            </td>
                            <td class="collapsing">
                                {% if 0 == mail.msgfrom %}
                                    {{ 'section.default.table.tbody.from.system'|t|colorize }}
                                {% elseif mail.name %}
                                    {% set statusImage = mail.loggedin ? 'online' : 'offline' %}

                                    <img src="images/{{ statusImage }}.gif" alt="{{ statusAltText[statusImage] }}">
                                    {{ mail.name|colorize }}
                                {% else %}
                                    {{ 'section.default.table.tbody.from.deleted.user'|t|colorize }}
                                {% endif %}
                            </td>
                            <td class="collapsing">{{ '{date,date} {date,time}'|tmf({ 'date': mail.sent }) }}</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
            <div class="field">
                <div class="ui centered grid">
                    <div class="five wide column">
                        <div class="ui fluid floating labeled icon dropdown button" id="check_name_select">
                            <i class="user icon"></i>
                            <span class="text">{{ 'section.default.form.dropdown.senders.name'|t|colorize }}</span>
                            <div class="menu">
                                <div class="header">{{ 'section.default.form.dropdown.senders.label'|t|colorize }}</div>
                                <div class="divider"></div>
                                {% for sender in senders %}
                                    <div class="item" data-value="{{ sender.msgfrom }}">
                                        <span class="description">{{ sender.count }}</span>
                                        <span class="text">
                                            {% if 0 == sender.msgfrom %}
                                                {{ 'section.default.table.tbody.from.system'|t|uncolorize }}
                                            {% elseif sender.name %}
                                                {{ sender.name|uncolorize|e('html') }}
                                            {% else %}
                                                ({{ sender.msgfrom }}) {{ 'section.default.table.tbody.from.deleted.user'|t|uncolorize }}
                                            {% endif %}
                                        </span>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                    <div class="three wide column">
                        <button type="button" class="ui toggle check fluid button">{{ 'section.default.form.button.check.all'|t|uncolorize }}</button>
                    </div>
                    <div class="four wide column">
                        <button class="ui red fluid delbulk button" type="button" onclick="JaxonLotgd.Ajax.Core.Mail.deleteBulkMail(jaxon.getFormValues('mail-inbox-form')); $(this).addClass('loading disabled'); $('.ui.delete.button, .toggle.lotgd.checkbox, #check_name_select, .ui.check.toggle.button').addClass('disabled');">{{ 'section.default.form.button.submit'|t|uncolorize }}</button>
                    </div>
                </div>
            </div>
        </form>
    {% else %}
        {{ 'section.default.no.mail'|t|colorize }}
    {% endif %}

    {{ 'section.default.note'|t({ 'inboxCount': inboxCount , 'inboxLimit': inboxLimit, 'oldMail': oldMail })|colorize }}

    {% do inline_script().captureStart() %}
        $('.ui.toggle.lotgd.checkbox').checkbox()
        $('#check_name_select')
            .dropdown({
                onChange: function (value)
                {
                    const elem = $(`[data-sender="${value}"]`)

                    elem.prop('checked', !elem.prop('checked'))
                }
            })

        $('.ui.toggle.button.check').state({
            text: {
                inactive: '{{ "section.default.form.button.check.all"|t|uncolorize }}',
                active: '{{ "section.default.form.button.check.none"|t|uncolorize }}'
            }
        })
            .on('click', function ()
            {
                if ($('.ui.toggle.button.check').state('is active'))
                {
                    $('input[type="checkbox"]').prop('checked', true)
                }
                else
                {
                    $('input[type="checkbox"]').prop('checked', false)
                }
            })
    {% do inline_script().captureEnd() %}
{% endblock mail_inbox %}

{% block mail_write %}
    <form id="mail-message" method="POST" class="ui form">
        <input type="hidden" name="return_to" value="{{ msgId }}">
        <div class="inline field">
            <label for="to">{{ 'section.write.form.to'|t|colorize }}</label>
            {% if row.acctid %}
                <input type="hidden" name="to" id="to" value="{{ row.acctid }}">
                <div class="input">{{ row.name|colorize }}</div>
            {% else %}
                <select class="ui fluid search selection dropdown" name="to" id="search"></select>
            {% endif %}
        </div>
        <div class="field">
            <label for="subject">{{ 'section.write.form.subject'|t|colorize }}</label>
            <input type="text" name="subject" id="subject" value="{{ row.subject|stripslashes|e('html')|trim }}">
        </div>
        <div class="ui warning message" id="warning" style="visibility: hidden; display: none;">
            {{ 'section.write.mail.notice'|t|uncolorize }}
        </div>
        <div class="field">
            <label for="body">{{ 'section.write.form.body'|t|colorize }}</label>
            <span id="sizemsg"></span>
            <textarea name="body" id="body" onkeyup="sizeCount(this)">{{ row.body|stripslashes|replace({ '`n': '\n' })|e('html')|trim }}</textarea>
        </div>
    </form>

    {% do inline_script().captureStart() %}
        $('#search').dropdown({
            preserveHTML: false,
            apiSettings: {
                cache: false,
                url: 'ajaxmailsearch.php?search={query}',
                onResponse: function (response)
                {
                    if (response.success)
                    {
                        Lotgd.set('mail-search-response', response.results)
                    }

                    // make some adjustments to response
                    return response
                }
            }
        })
        $('#search').on('change', function ()
        {
            const val = $(this).val()
            const superuser = Lotgd.get('mail-search-response')
            const user = superuser.find(user => user.value === val)

            checkSuWarning(user)
        })

        const charactersLeft = '{{ "section.write.form.characters.left"|t|colorize|e("js") }}'
        const charactersOver = '{{ "section.write.form.characters.over"|t|colorize|e("js") }}'

        const maxlen = '{{ mailSizeLimit }}'

        function sizeCount (box)
        {
            if (box == null)
            {
                return
            }

            const len = box.value.length
            let msg = ''
            msg = charactersOver.replace('{size}', maxlen).replace('{over}', (len - maxlen))

            $('button[type="submit"]').attr('disabled', true)

            if (len <= maxlen)
            {
                msg = charactersLeft.replace('{size}', maxlen).replace('{left}', (maxlen - len))
                $('button[type="submit"]').attr('disabled', false)
            }

            document.getElementById('sizemsg').innerHTML = msg
        }
        sizeCount(document.getElementById('body'))

        function checkSuWarning (user)
        {
            const warning = document.getElementById('warning')

            if (user.superuser === true)
            {
                warning.style.visibility = 'visible'
                warning.style.display = 'block'
            }
            else
            {
                warning.style.visibility = 'hidden'
                warning.style.display = 'none'
            }
        }
    {% do inline_script().captureEnd() %}
{% endblock mail_write %}

{% block mail_read %}
    {{ block('mail_buttons') }}

    <br>

    {% set statusAltText = {
        'online': 'section.read.card.user.status.online'|t|uncolorize,
        'offline': 'section.read.card.user.status.offline'|t|uncolorize
    } %}

    {% if 0 == message.msgfrom %}
        {% set subject = message.subject|stripslashes|unserialize %}
        {% set body = message.body|stripslashes|unserialize %}
    {% else %}
        {% set subject = message.subject %}
    {% endif %}


    {% if not message %}.
        {% set subjectDisplay = 'section.read.card.no.message.header'|t|colorize %}
    {% elseif subject is array %}
        {% set subjectDisplay = subject[0]|tl(subject[1], subject[2])|colorize %}
    {% elseif not subject %}
        {% set subjectDisplay = message.subject|default('section.read.card.no.subject'|t)|e('html')|colorize %}
    {% else %}
        {% set subjectDisplay = subject|e('html')|colorize %}
    {% endif %}

    {% if not message %}
        {% set bodyDisplay = 'section.read.card.no.message.body'|t|colorize %}
    {% elseif body is array %}
        {% set bodyDisplay = body[0]|tl(body[1], body[2])|colorize %}
    {% else %}
        {% set bodyDisplay = message.body %}
    {% endif %}

    <div class="ui fluid card">
        <div id="mail-read-buttons" class="ui top attached buttons">
            <a class="ui {{ message.messageid and message.msgfrom ? '' : 'disabled' }} button" onclick="JaxonLotgd.Ajax.Core.Mail.reply('{{ message.messageid }}'); $(this).addClass('loading disabled');">
                {{ 'section.read.button.top.reply'|t|uncolorize }}
            </a>
            <a class="ui delete red {{ message.messageid ? '' : 'disabled' }} button" onclick="JaxonLotgd.Ajax.Core.Mail.deleteMail('{{ message.messageid }}'); $(this).addClass('loading disabled');">
                {{ 'section.read.button.top.del'|t|uncolorize }}
            </a>
            <a class="ui unread {{ message.messageid ? '' : 'disabled' }} button" onclick="JaxonLotgd.Ajax.Core.Mail.unread('{{ message.messageid }}'); $(this).addClass('loading disabled');">
                {{ 'section.read.button.top.unread'|t|uncolorize }}
            </a>
            <a class="ui report {{ message.msgfrom ? '' : 'disabled' }} orange button" onclick="JaxonLotgd.Ajax.Core.Petition.report('{{ message.msgfrom }}', '{{ bodyDisplay|e('html_attr') }}'); $(this).addClass('loading disabled');">
                {{ 'section.read.button.top.report'|t|uncolorize }}
            </a>
        </div>
        <div class="content">
            {% if not message.seen and message %}
                <span class="ui teal ribbon label">{{ 'section.read.card.new'|t|uncolorize }}</span>
            {% endif %}
            <div class="right floated meta">{{ 'section.read.card.sent'|t({ 'date': message.sent })|colorize }}</div>

            {% if 0 == message.msgfrom %}
                {% set senderName = 'section.read.card.from.user.system'|t|colorize %}
            {% elseif sender.name %}
                {% set statusImage = sender.acct.loggedin ? 'online' : 'offline' %}

                {% set senderName = '<img src="images/' ~ statusImage ~ '.gif" alt="' ~ statusAltText[statusImage] ~ '">' ~ sender.name|colorize %}
            {% else %}
                {% set senderName = 'section.read.card.from.user.deleted.user'|t|colorize %}
            {% endif %}

            {{ 'section.read.card.from.label'|t({ 'name': senderName })|colorize }}
        </div>
        <div class="content">
            <span class="ui header">{{ subjectDisplay }}</span>
            <p>{{ bodyDisplay|e('html')|colorize }}</p>
        </div>
        {% set jaxonRead = 'JaxonLotgd.Ajax.Core.Mail.read(%s);' %}
        <div class="ui bottom attached primary buttons">
            <a class="ui {{ paginator.previous ? '' : 'disabled' }} button" onclick="{{ paginator.previous ? jaxonRead|format(paginator.previous) : '' }} $(this).addClass('loading disabled')">
                {{ 'section.read.card.paginator.prev'|t|uncolorize }}
            </a>
            <a class="ui {{ paginator.next ? '' : 'disabled' }} button" onclick="{{ paginator.next ? jaxonRead|format(paginator.next) : '' }} $(this).addClass('loading disabled')">
                {{ 'section.read.card.paginator.next'|t|uncolorize }}
            </a>
        </div>
    </div>
{% endblock mail_read %}

{% block mail_buttons %}
    {#
        Format for buttons
        [
            [
                'buton-key-translation',
                //-- Params (is used as translator params too)
                {
                    'attributes': {
                        // Additional class names
                        'class': '',
                        // Jaxon JavaScript function
                        'onclick': 'JaxonLotgd.Ajax.Local.Class.Function()'
                    }
                },
                'translator-text-domain'
            ]
        ]
    #}

    {% set buttons = modulehook('mail_buttons', {}) %}

    <div class="ui one column center aligned grid">
        <div class="column">
            <div class="ui buttons">
                <a class="ui button" onclick="JaxonLotgd.Ajax.Core.Mail.inbox(); $(this).addClass('loading disabled')">{{ 'button.inbox'|t|colorize }}</a>
                <a class="ui primary button" onclick="JaxonLotgd.Ajax.Core.Mail.write(); $(this).addClass('loading disabled')">{{ 'button.write'|t|colorize }}</a>

                {% for btn in buttons %}
                    <a class="ui {{ btn[1].attributes.class }} button" onclick="{{ btn[1].attributes.onclick }}">{{ btn[0]|tl(btn[1], btn[2])|colorize }}</a>
                {% endfor %}
            </div>
        </div>
    </div>
{% endblock mail_buttons %}
