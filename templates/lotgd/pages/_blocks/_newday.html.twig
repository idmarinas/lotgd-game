{% translate_default_domain textDomain %}

{% block newday_default %}
    <h1 class="ui header center aligned">{{ 'section.default.title'|t|colorize }}</h1>

    {# Resurrection #}
    {% if resurrected %}
        {{ 'section.default.resurrection'|t({ 'resurrections': user.resurrections })|colorize }}
    {% endif %}

    {# You discover it's a new day O_O #}
    {{ 'section.default.open.eyes'|t({ 'age': user.age })|colorize }}

    {# Show turns if not have stamina system module active #}
    {% if not moduleStaminaSystem %}
        {{ 'section.default.turns'|t({ 'turns': turnsPerDay })|colorize }}
    {% endif %}

    {% if canGetInterest %}
        {{ 'section.default.interest.worker'|t(_context)|colorize }}
    {% elseif maxInterest %}
        {{ 'section.default.interest.max'|t(_context)|colorize }}
    {% else %}
        {{ 'section.default.interest.rate'|t({ 'rate': interestRate - 1 })|colorize }}
        {% if userPre.goldinbank >= 0 %}
            {{ 'section.default.interest.earned'|t({ 'gold': (userPre.goldinbank * (interestRate - 1)) })|colorize }}
        {% else %}
            {{ 'section.default.interest.debt'|t({ 'gold': (userPre.goldinbank * (interestRate - 1)) })|colorize }}
        {% endif %}
    {% endif %}

    {{ 'section.default.hitpoints'|t({ 'maxHitpoints': user.maxhitpoints })|colorize }}

    {# Buffs messages #}
    {% for message in buffMessages %}
        {{ message|colorize }}<br>
    {% endfor %}

    {% if not moduleStaminaSystem and forestTurnDragonKill %}
        {{ 'section.default.forest.turns'|t({ 'turns': forestTurnDragonKill })|colorize }}
    {% endif %}

    {# Spirit of character #}
    {{ 'section.default.spirit.level'|t({ 'spirit': spirits[spirit]|t })|colorize }}

    {% if spirit|abs %}
        {% set balance = (resurrectionTurns > 0 ? 'gain' : 'lost') %}
        {% if moduleStaminaSystem %}
            {{ 'section.default.spirit.stamina'|t({ 'balance': balance })|colorize }}
        {% else %}
            {{ 'section.default.spirit.turns'|t({ 'balance': balance, 'turns': resurrectionTurns|abs })|colorize }}
        {% endif %}
    {% endif %}

    {% if user.hashorse %}
        {% if mountMessage is array %}
            {{ mountMessage[0]|format(mountMessage[1])|colorize }}
        {% else %}
            {{ mountMessage|colorize }}
        {% endif %}

        {% if mountTurns != 0 %}
            {% set state = mountTurns > 0 ? 'gain' : 'lost' %}

            {{ 'section.default.horse.yes'|t({ 'state': state, 'turns': mountTurns })|colorize }}
        {% endif %}
    {% else %}
        {{ 'section.default.horse.no'|t({ 'playerWeapon': user.weapon })|colorize }}
    {% endif %}

    {# Haunted by ghost #}
    {% if haunted %}
        {{ ('section.default.haunted.' ~ (moduleStaminaSystem ? 'stamina' : 'turns'))|t({ 'name': haunted })|colorize }}
    {% endif %}
{% endblock newday_default %}

{% block newday_dragonpoints %}
    {% if points > 1 %}
        {{ 'section.dragonpoints.multi.paragraph'|t({ 'points': points })|colorize }}

        <form id="dragon-points-form" action="{{ formUrl|lotgd_url }}" method="post">
            <table class="ui very compact basic collapsing centered table">
                {% for type, label in labels %}
                    {% set head = label|split(',') %}

                    {% if head|length > 1 %}
                        <thead>
                            <tr>
                                <th colspan="2" class="collapsing center aligned" scope="colgroup">{{ '`b`4%s`0´b'|format(head[0])|colorize }}</th>
                            </tr>
                        </thead>
                    {% elseif canBuy[type] %}
                        <tr>
                            <td class="collapsing">{{ label|colorize }}</td>
                            <td>&nbsp;&nbsp;</td>
                            <td><input type="number" id="{{ type }}" name="{{ type }}" value="" onchange="pointsLeft(this)"></td>
                        </tr>
                    {% endif %}
                {% endfor %}
                <tr><td colspan="2">&nbsp;</td></tr>
                <tr>
                    <td colspan="2" class="center aligned">
                        <button type="submit" class="ui button">{{ 'section.dragonpoints.multi.form.button.submit'|t|uncolorize }}</button>
                    </td>
                </tr>
                <tr><td colspan="2">&nbsp;</td></tr>
                <tr>
                    <td colspan="2" class="center aligned"><div id="amt-left"></div></td>
                </tr>
            </table>
        </form>

        <script>
            /* global $ */
            const points = parseInt('{{ points }}')

            const textLeft = '{{ "section.dragonpoints.form.points.left"|t|colorize }}'
            const textOver = '{{ "section.dragonpoints.form.points.over"|t|colorize }}'

            // eslint-disable-next-line no-unused-vars
            function pointsLeft ()
            {
                let pointsTotal = 0
                $('input[type="number"]').each(function (index, elem)
                {
                    pointsTotal += elem.val()
                })

                const text = (pointsTotal >= 0) ? textLeft : textOver

                $('#amt-left').html(text.replace('%s', pointsTotal).replace('%s', (points - pointsTotal)))
            }
        </script>
    {% else %}
        {{ 'section.dragonpoints.single.paragraph'|t(_context)|colorize }}

        <table class="ui very compact basic collapsing centered table">
            {% for type, label in labels %}
                {% set head = label|split(',') %}

                {% if head|length > 1 %}
                    <thead>
                        <tr>
                            <th colspan="2" class="center aligned" scope="colgroup">{{ '`b`4%s`0´b'|format(head[0])|colorize }}</th>
                        </tr>
                    </thead>
                {% elseif canBuy[type] and canBuy[type] != 'unknown' %}
                    <tr>
                        <td>{{ label|colorize }}</td>
                        <td>&nbsp;&nbsp;</td>
                        <td>{{ '`@%s`0'|format(distribution[type]|numeral)|colorize }}</td>
                    </tr>
                {% endif %}
            {% endfor %}
        </table>
    {% endif %}
{% endblock newday_dragonpoints %}

{% block newday_race %}
    {{ 'section.race.paragraph'|t|colorize }}

    {% if isAdmin %}
        {{ 'section.race.admin.yes'|t|colorize }}
    {% else %}
        {{ 'section.race.admin.no'|t|colorize }}
    {% endif %}
{% endblock newday_race %}

{% block newday_specialty %}
    {{ 'section.specialty.paragraph'|t|colorize }}

    {% if isAdmin %}
        {{ 'section.specialty.admin.yes'|t|colorize }}
    {% else %}
        {{ 'section.specialty.admin.no'|t|colorize }}
    {% endif %}
{% endblock newday_specialty %}
